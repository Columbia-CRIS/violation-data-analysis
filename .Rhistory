num.days.lm <- lm(0*num.death+1*num.days.lost+1*num.days.restrict~last.quarter.lost+last.year.lost+last.three.years.lost
+last.quarter.restrict+last.year.restrict+last.three.years.restrict
+last.quarter.viol+last.year.viol+last.three.years.viol
+last.quarter.death+last.year.death+last.three.years.death,
data=complete.active.quarters %>% filter(active))
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
knitr::opts_knit$set(root.dir = "~/Git/violation-data-analysis")
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
head(top.deaths, 10)
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
upper.big.branch <- complete.active.quarters %>% filter(mine_id == 4608436 & (year < 2010 | (year == 2010 & quarter < 2))) %>%
select(year, quarter, num.days.lost, viol.quantity)
# ggplot() +
#   geom_line(data = upper.big.branch, aes(x = year + quarter / 4, y = viol.quantity), color = "red") +
#   geom_line(data = upper.big.branch, aes(x = year + quarter / 4, y = num.days.lost), color = "green")
qplot(x=year + quarter / 4, y=viol.quantity, data=upper.big.branch, geom = "line",
main = "Upper Big Branch: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
no.5.mine <- complete.active.quarters %>% filter(mine_id == 101322 & (year < 2001 | (year == 2001 & quarter < 3))) %>%
select(year, quarter, num.days.lost, viol.quantity)
qplot(x=year + quarter / 4, y=viol.quantity, data=no.5.mine, geom = "line",
main = "No. 5 Mine: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
darby.mine <- complete.active.quarters %>% filter(mine_id == 1518185 & (year < 2006 | (year == 2006 & quarter < 2))) %>%
select(year, quarter, num.days.lost, viol.quantity)
qplot(x=year + quarter / 4, y=viol.quantity, data=darby.mine, geom = "line",
main = "Darby Mine No. 1: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
gibson.mine <- complete.active.quarters %>% filter(mine_id == 1202215 & (year < 2007 | (year == 2007 & quarter < 3))) %>%
select(year, quarter, num.days.lost, viol.quantity)
qplot(x=year + quarter / 4, y=viol.quantity, data=gibson.mine, geom = "line",
main = "Gibson Mine: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.days.lost <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.days.lost)) %>% select(mine.name, year, quarter, num.days.lost)
head(top.days.lost, 10)
if(!exists("accidents")){load("./San Antonio/data/secret_ingredients.RData")}
new.era <- accidents %>%
filter(mine_id == 1102752 & cal_yr == 2005 & cal_qtr == 2) %>%
arrange(desc(days_lost)) %>%
select(
ai_dt,
days_lost,
ai_class_desc
#ai_occ_desc
#ai_narr
)
head(new.era)
if(!exists("accidents")){load("./San Antonio/data/secret_ingredients.RData")}
new.era.top.accidents <- accidents %>%
filter(mine_id == 1102752 & cal_yr == 2005 & cal_qtr == 2) %>%
arrange(desc(days_lost)) %>%
select(
ai_dt,
days_lost,
ai_class_desc,
ai_occ_desc,
ai_narr
)
print(as.character(new.era.top.accidents$ai_narr[1]))
if(!exists("new.era.top.accidents")){
if(!exists("accidents")){load("./San Antonio/data/secret_ingredients.RData")}
new.era.top.accidents <- accidents %>%
filter(mine_id == 1102752 & cal_yr == 2005 & cal_qtr == 2) %>%
arrange(desc(days_lost)) %>%
select(
ai_dt,
days_lost,
ai_class_desc,
ai_occ_desc,
ai_narr
)
}
print(as.character(new.era.top.accidents$ai_narr[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
num.days.lm <- lm(0*num.death+1*num.days.lost+1*num.days.restrict~last.quarter.lost+last.year.lost+last.three.years.lost
+last.quarter.restrict+last.year.restrict+last.three.years.restrict
+last.quarter.viol+last.year.viol+last.three.years.viol
+last.quarter.death+last.year.death+last.three.years.death,
data=complete.active.quarters %>% filter(active))
sapply(complete.active.quarters, function(x) sum(is.na(x)))
View(complete.active.quarters)
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
gibson.mine <- complete.active.quarters %>% filter(mine_id == 1202215 & (year < 2007 | (year == 2007 & quarter < 3))) %>%
select(year, quarter, num.days.lost, viol.quantity)
qplot(x=year + quarter / 4, y=viol.quantity, data=gibson.mine, geom = "line",
main = "Gibson Mine: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
knitr::opts_knit$set(root.dir = "~/Git/violation-data-analysis")
rm(list=ls())
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
head(top.deaths, 10)
View(complete.active.quarters)
View(top.deaths)
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
unique(complete.active.quarters$active)
rm(list=ls())
# Upper Big Branch: 4608436
# This is a temporary fix
# Inputs: raw accidents data and final data with only active mine-quarters
# Output: days lost, days restrict, deaths, and violations with only active mine-quarters
# setup
require(dplyr)
library(RcppRoll)
setwd("~/Git/violation-data-analysis")
# load accidents, violations, and function roll_over
if(!exists("accidents") |
!exists("full.days_lost.accidents.date") |
!exists("roll_over") |
!exists("mines")) {
load("./San Antonio/data/secret_ingredients.RData")
print("raw RData loaded")
}
# constant parameters
longest.period <- 3
actual.start.year <- 2000
end.year <- 2015
# generate accident_roll_over and death_roll_over
actual.accidents <- accidents %>% filter(is.element(inj_degr_desc, c("DAYS AWAY FROM WORK ONLY",
"DYS AWY FRM WRK & RESTRCTD ACT",
"DAYS RESTRICTED ACTIVITY ONLY",
"FATALITY",
"PERM TOT OR PERM PRTL DISABLTY",
"NO VALUE FOUND")))
actual.accidents["deaths"] <- 0
actual.accidents["perm_dis"] <- 0
na.and.no.value.index <- is.element(actual.accidents$inj_degr_desc, "NO VALUE FOUND") & is.na(actual.accidents$days_lost)
actual.accidents[na.and.no.value.index, "days_restrict"] <- 0
actual.accidents[na.and.no.value.index, "days_lost"] <- 0
actual.accidents[which(actual.accidents$inj_degr_desc == "FATALITY"), "deaths"] <- 1
actual.accidents[which(actual.accidents$inj_degr_desc == "PERM TOT OR PERM PRTL DISABLTY"), "perm_dis"] <- 1
actual.accidents$ai_dt_actual_date <- strftime(actual.accidents$ai_dt, "%F")
rm(na.and.no.value.index, accidents)
quarter.level.num.days.lost <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(days_lost, na.rm = T))
days_lost_rollover <- roll_over(actual.accidents,
quarter.level.num.days.lost,
longest.period,
actual.start.year,
end.year)
colnames(days_lost_rollover) <- c(
"mine_id", "year", "quarter", "num.days.lost",
"last.quarter.lost", "last.year.lost", "last.three.years.lost"
)
rm(quarter.level.num.days.lost)
quarter.level.num.days.restrict <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(days_restrict, na.rm = T))
days_restrict_rollover <- roll_over(actual.accidents,
quarter.level.num.days.restrict,
longest.period,
actual.start.year,
end.year)
colnames(days_restrict_rollover) <- c(
"mine_id", "year", "quarter",
"num.days.restrict", "last.quarter.restrict", "last.year.restrict", "last.three.years.restrict"
)
rm(quarter.level.num.days.restrict)
quarter.level.num.deaths <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(deaths, na.rm = T))
death_rollover <- roll_over(actual.accidents,
quarter.level.num.deaths,
longest.period,
actual.start.year,
end.year)
colnames(death_rollover) <- c(
"mine_id", "year", "quarter",
"num.death", "last.quarter.death", "last.year.death", "last.three.years.death"
)
rm(quarter.level.num.deaths)
quarter.level.num.perm_dis <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(perm_dis, na.rm = T))
dis_rollover <- roll_over(actual.accidents,
quarter.level.num.perm_dis,
longest.period,
actual.start.year,
end.year)
colnames(dis_rollover) <- c(
"mine_id", "year", "quarter",
"num.dis", "last.quarter.dis", "last.year.dis", "last.three.years.dis"
)
rm(quarter.level.num.perm_dis)
# cleanup violations
active_violation_rollover = full.days_lost.accidents.date %>%
select(mine_id, year, quarter, viol.quantity, last.quarter.y, last.year.y, last.three.years.y)
active_violation_rollover$active <- TRUE
colnames(active_violation_rollover) <- c(
"mine_id", "year", "quarter",
"viol.quantity", "last.quarter.viol", "last.year.viol", "last.three.years.viol",
"active"
)
# join accidents and violation
temp <- merge(days_lost_rollover, days_restrict_rollover, by = c("mine_id","year","quarter"),all=TRUE)
temp[is.na(temp)] <- 0
temp <- merge(temp, death_rollover, by = c("mine_id","year","quarter"),all=TRUE)
temp[is.na(temp)] <- 0
temp <- merge(temp, dis_rollover, by = c("mine_id","year","quarter"),all=TRUE)
temp[is.na(temp)] <- 0
unique(active_violation_rollover$active)
temp <- merge(temp, active_violation_rollover, by = c("mine_id","year","quarter"),all.x=TRUE)
unique(temp$active)
View(active_violation_rollover)
unique(temp$last.year.viol)
View(active_violation_rollover$last.year.viol)
unique(active_violation_rollover$last.year.viol)
View(active_violation_rollover)
View(days_restrict_rollover)
View(days_lost_rollover)
actual.accidents <- accidents %>% filter(is.element(inj_degr_desc, c("DAYS AWAY FROM WORK ONLY",
"DYS AWY FRM WRK & RESTRCTD ACT",
"DAYS RESTRICTED ACTIVITY ONLY",
"FATALITY",
"PERM TOT OR PERM PRTL DISABLTY",
"NO VALUE FOUND")))
actual.accidents["deaths"] <- 0
actual.accidents["perm_dis"] <- 0
na.and.no.value.index <- is.element(actual.accidents$inj_degr_desc, "NO VALUE FOUND") & is.na(actual.accidents$days_lost)
actual.accidents[na.and.no.value.index, "days_restrict"] <- 0
actual.accidents[na.and.no.value.index, "days_lost"] <- 0
actual.accidents[which(actual.accidents$inj_degr_desc == "FATALITY"), "deaths"] <- 1
actual.accidents[which(actual.accidents$inj_degr_desc == "PERM TOT OR PERM PRTL DISABLTY"), "perm_dis"] <- 1
actual.accidents$ai_dt_actual_date <- strftime(actual.accidents$ai_dt, "%F")
rm(na.and.no.value.index, accidents)
quarter.level.num.days.lost <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(days_lost, na.rm = T))
days_lost_rollover <- roll_over(actual.accidents,
quarter.level.num.days.lost,
longest.period,
actual.start.year,
end.year)
colnames(days_lost_rollover) <- c(
"mine_id", "quarter", "year",
"num.days.lost", "last.quarter.lost", "last.year.lost", "last.three.years.lost"
)
rm(quarter.level.num.days.lost)
quarter.level.num.days.restrict <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(days_restrict, na.rm = T))
days_restrict_rollover <- roll_over(actual.accidents,
quarter.level.num.days.restrict,
longest.period,
actual.start.year,
end.year)
colnames(days_restrict_rollover) <- c(
"mine_id", "quarter", "year",
"num.days.restrict", "last.quarter.restrict", "last.year.restrict", "last.three.years.restrict"
)
rm(quarter.level.num.days.restrict)
quarter.level.num.deaths <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(deaths, na.rm = T))
death_rollover <- roll_over(actual.accidents,
quarter.level.num.deaths,
longest.period,
actual.start.year,
end.year)
colnames(death_rollover) <- c(
"mine_id", "quarter", "year",
"num.death", "last.quarter.death", "last.year.death", "last.three.years.death"
)
rm(quarter.level.num.deaths)
quarter.level.num.perm_dis <- actual.accidents %>% group_by(mine_id, cal_qtr, cal_yr)%>%
summarize(base = sum(perm_dis, na.rm = T))
dis_rollover <- roll_over(actual.accidents,
quarter.level.num.perm_dis,
longest.period,
actual.start.year,
end.year)
colnames(dis_rollover) <- c(
"mine_id", "quarter", "year",
"num.dis", "last.quarter.dis", "last.year.dis", "last.three.years.dis"
)
rm(quarter.level.num.perm_dis)
# cleanup violations
active_violation_rollover = full.days_lost.accidents.date %>%
select(mine_id, year, quarter, viol.quantity, last.quarter.y, last.year.y, last.three.years.y)
active_violation_rollover$active <- TRUE
colnames(active_violation_rollover) <- c(
"mine_id", "year", "quarter",
"viol.quantity", "last.quarter.viol", "last.year.viol", "last.three.years.viol",
"active"
)
temp <- merge(days_lost_rollover, days_restrict_rollover, by = c("mine_id","year","quarter"),all=TRUE)
temp[is.na(temp)] <- 0
temp <- merge(temp, death_rollover, by = c("mine_id","year","quarter"),all=TRUE)
temp[is.na(temp)] <- 0
temp <- merge(temp, dis_rollover, by = c("mine_id","year","quarter"),all=TRUE)
temp[is.na(temp)] <- 0
temp <- merge(temp, active_violation_rollover, by = c("mine_id","year","quarter"),all.x=TRUE)
unique(temp$active)
unique(temp$last.quarter.viol)
temp[is.na(temp$active),]$active <- FALSE
temp[is.na(temp)] <- 0
colnames(mines) <- c("mine_id", "mine.name")
temp <- merge(temp, mines, by = "mine_id", all.x=TRUE)
temp <- temp[, c(1, 25, 2:3, 24, 4:23)]
complete.active.quarters <- temp
save(complete.active.quarters, file="./San Antonio/output/result.RData")
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
knitr::opts_knit$set(root.dir = "~/Git/violation-data-analysis")
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
head(top.deaths, 10)
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
upper.big.branch <- complete.active.quarters %>% filter(mine_id == 4608436 & (year < 2010 | (year == 2010 & quarter < 2))) %>%
select(year, quarter, num.days.lost, viol.quantity)
# ggplot() +
#   geom_line(data = upper.big.branch, aes(x = year + quarter / 4, y = viol.quantity), color = "red") +
#   geom_line(data = upper.big.branch, aes(x = year + quarter / 4, y = num.days.lost), color = "green")
qplot(x=year + quarter / 4, y=viol.quantity, data=upper.big.branch, geom = "line",
main = "Upper Big Branch: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
no.5.mine <- complete.active.quarters %>% filter(mine_id == 101322 & (year < 2001 | (year == 2001 & quarter < 3))) %>%
select(year, quarter, num.days.lost, viol.quantity)
qplot(x=year + quarter / 4, y=viol.quantity, data=no.5.mine, geom = "line",
main = "No. 5 Mine: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
darby.mine <- complete.active.quarters %>% filter(mine_id == 1518185 & (year < 2006 | (year == 2006 & quarter < 2))) %>%
select(year, quarter, num.days.lost, viol.quantity)
qplot(x=year + quarter / 4, y=viol.quantity, data=darby.mine, geom = "line",
main = "Darby Mine No. 1: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
gibson.mine <- complete.active.quarters %>% filter(mine_id == 1202215 & (year < 2007 | (year == 2007 & quarter < 3))) %>%
select(year, quarter, num.days.lost, viol.quantity)
qplot(x=year + quarter / 4, y=viol.quantity, data=gibson.mine, geom = "line",
main = "Gibson Mine: Number of Quarterly Violations",
xlab = "Year", ylab = "Count")
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.days.lost <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.days.lost)) %>% select(mine.name, year, quarter, num.days.lost)
head(top.days.lost, 10)
if(!exists("accidents")){load("./San Antonio/data/secret_ingredients.RData")}
new.era <- accidents %>%
filter(mine_id == 1102752 & cal_yr == 2005 & cal_qtr == 2) %>%
arrange(desc(days_lost)) %>%
select(
ai_dt,
days_lost,
ai_class_desc
#ai_occ_desc
#ai_narr
)
head(new.era)
if(!exists("accidents")){load("./San Antonio/data/secret_ingredients.RData")}
new.era.top.accidents <- accidents %>%
filter(mine_id == 1102752 & cal_yr == 2005 & cal_qtr == 2) %>%
arrange(desc(days_lost)) %>%
select(
ai_dt,
days_lost,
ai_class_desc,
ai_occ_desc,
ai_narr
)
print(as.character(new.era.top.accidents$ai_narr[1]))
if(!exists("new.era.top.accidents")){
if(!exists("accidents")){load("./San Antonio/data/secret_ingredients.RData")}
new.era.top.accidents <- accidents %>%
filter(mine_id == 1102752 & cal_yr == 2005 & cal_qtr == 2) %>%
arrange(desc(days_lost)) %>%
select(
ai_dt,
days_lost,
ai_class_desc,
ai_occ_desc,
ai_narr
)
}
print(as.character(new.era.top.accidents$ai_narr[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
num.days.lm <- lm(0*num.death+1*num.days.lost+1*num.days.restrict~last.quarter.lost+last.year.lost+last.three.years.lost
+last.quarter.restrict+last.year.restrict+last.three.years.restrict
+last.quarter.viol+last.year.viol+last.three.years.viol
+last.quarter.death+last.year.death+last.three.years.death,
data=complete.active.quarters %>% filter(active))
summary(num.days.lm)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
num.deaths.lm <- lm(1*num.death+0*num.days.lost+0*num.days.restrict~last.quarter.lost+last.year.lost+last.three.years.lost
+last.quarter.restrict+last.year.restrict+last.three.years.restrict
+last.quarter.viol+last.year.viol+last.three.years.viol
+last.quarter.death+last.year.death+last.three.years.death,
data=complete.active.quarters %>% filter(active))
summary(num.deaths.lm)
train <- complete.active.quarters
die.or.dis <- train %>% filter(active & (num.death > 0 | num.dis >0))
summary(lm(num.death + num.dis~last.quarter.viol+last.year.viol+last.three.years.viol,
data=die.or.dis))
train <- complete.active.quarters
die.or.dis <- train %>% filter(active & (num.death > 0 | num.dis >0))
summary(lm(num.death + num.dis~last.quarter.viol+last.year.viol+last.three.years.viol,
data=die.or.dis))
bad <- train %>% filter(active & (num.death > 0 | num.dis >0))
bad$mark <- 'bad'
good <- train %>% filter(active & num.death == 0 & num.dis ==0)
good$mark <- 'good'
goodbad <- rbind(good, bad)
bad <- train %>% filter(active & last.quarter.viol > 0 & (num.death > 0 | num.dis >0))
bad$mark <- 'bad'
good <- train %>% filter(active & last.quarter.viol > 0 & num.death == 0 & num.dis ==0)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = last.quarter.viol / (last.year.viol / 4))
ggplot(goodbad, aes(num.days.lost)) + geom_density(alpha = 0.2)
ggplot(goodbad, aes(ratio)) + geom_density(alpha = 0.2)
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 4))
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost > 100))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 4))
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
rm(list=ls())
setwd("~/Git/violation-data-analysis")
load("./San Antonio/output/result.RData")
train <- complete.active.quarters
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost > 100))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0)
good$mark <- 'good'
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > 100))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0)
good$mark <- 'good'
bad.condition <- active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > 100)
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > 100))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0 & num.days.lost + num.days.restrict <= 100)
good$mark <- 'good'
cutoff <- 50
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > cutoff))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0 & num.days.lost + num.days.restrict <= cutoff)
good$mark <- 'good'
cutoff <- 25
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > cutoff))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0 & num.days.lost + num.days.restrict <= cutoff)
good$mark <- 'good'
cutoff <- 10
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > cutoff))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0 & num.days.lost + num.days.restrict <= cutoff)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 4))
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
max(goodbad$ratio)
min(goodbad$ratio)
cutoff <- 1000
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > cutoff))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0 & num.days.lost + num.days.restrict <= cutoff)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 4))
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
ggplot(goodbad, aes(ratio)) + geom_density()
head(goodbad %>% filter(ratio == 4))
View(train %>% filter(mine_id == 100004))
View(train %>% filter(mine_id == 100004)) %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 4))
View(train %>% filter(mine_id == 100004)) %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 4))
cutoff <- 1000
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > cutoff))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0 & num.days.lost + num.days.restrict <= cutoff)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 3))
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
ln(2)
log(2)
cutoff <- 1000
bad <- train %>% filter(active & last.year.viol > 0 & (num.death > 0 | num.dis >0 | num.days.lost + num.days.restrict > cutoff))
bad$mark <- 'bad'
good <- train %>% filter(active & last.year.viol > 0 & num.death == 0 & num.dis ==0 & num.days.lost + num.days.restrict <= cutoff)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = log(last.year.viol / (last.three.years.viol / 3)))
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
ggplot(train %>% filter(active), aes(num.death+num.dis)) + geom_density()
ggplot(train %>% filter(active), aes(num.days.lost)) + geom_density()
ggplot(train %>% filter(active & last.year.lost > 0), aes(last.year.lost / last.three.years.lost)) + geom_density()
ggplot(train %>% filter(active & last.year.lost > 0), aes(last.year.lost / last.three.years.lost * 3)) + geom_density()
plot(ecdf(x = train$num.days.lost))
plot(ecdf(x = train$num.death + train$num.dis))
qqnorm(train$num.days.lost)
