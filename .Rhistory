group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
qqnorm(log(training.nonzero$num.days.lost)
train.non.zero <- train %>% filter(num.days.lost > 0)
plot(ecdf(train.non.zero$num.days.lost))
qqnorm((train %>% filter(num.days.lost > 0))$num.days.lost)
top.days.lost <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.days.lost)) %>% select(mine_id, mine.name, year, quarter, num.days.lost)
head(top.days.lost, 10)
# Lightning strike at Shoal Creek mine injures 6
# http://blog.al.com/spotnews/2007/06/lightning_strike_at_mine_injur.html
View(accidents %>% filter(mine_id == 102901 & ai_dt == "2007-06-27") %>% arrange(desc(days_lost)))
# train <- train %>% rowwise() %>% mutate(high_severity = num.death > 0 | num.days.lost > 100)
# train <- train[, c(1:5, 22, 6:21)]
# train %>% count(high_severity)
# View(train %>% filter(mine_id == 1102752))
# new_era <- accidents %>% filter(mine_id == 1102752 & cal_qtr == 2 & cal_yr == 2005) %>% arrange(
#   desc(days_lost)
# )
# View(new_era)
#
# summary(lm(num.days.lost + num.days.restrict ~ last.quarter.viol+last.year.viol+last.three.years.viol, data=train %>% filter(active)))
cutoff <- 50
bad <- train %>% filter((num.death > 0 | num.dis > 0 | num.days.lost + num.days.restrict > cutoff))
bad$mark <- 'bad'
good <- train %>% filter( num.death == 0 & num.dis == 0 & num.days.lost + num.days.restrict <= cutoff)
good$mark <- 'good'
goodbad <- rbind(good, bad)
goodbad <- goodbad %>% rowwise() %>% mutate(ratio = (last.year.viol / (last.three.years.viol / 3)))
ggplot(goodbad, aes(ratio, fill = mark)) + geom_density(alpha = 0.2)
ggplot(train %>% filter(active & last.year.lost > 0), aes(last.year.lost / last.three.years.lost * 3)) + geom_density()
head(goodbad %>% filter(ratio == 4))
View(train %>% filter(mine_id == 100004)) %>% rowwise() %>% mutate(ratio = last.year.viol / (last.three.years.viol / 4))
#ggplot(goodbad, aes(ratio)) + geom_density(alpha = 0.2)
plot(ecdf(x = train$num.death + train$num.dis))
qqnorm(train$num.days.lost)
# msha_glm <- clogit(high_severity ~ num.days.lost + viol.quantity + strata(mine_id),
#                    data = train%>% top_n(100) %>% filter(active) %>% select(mine_id, num.days.lost, high_severity, viol.quantity))
#
# print(msha_glm)
sapply(complete.active.quarters, function(x) sum(is.na(x)))
# lm on composite num.days.lost
summary(lm(0*num.death+1*num.days.lost+1*num.days.restrict~last.quarter.lost+last.year.lost+last.three.years.lost
+last.quarter.restrict+last.year.restrict+last.three.years.restrict
+last.quarter.viol+last.year.viol+last.three.years.viol
+last.quarter.death+last.year.death+last.three.years.death,
data=train ))
# logistic regression
train <- complete.active.quarters
die.or.dis <- train %>% filter(active & (num.death > 0 | num.dis >0))
summary(lm(num.death + num.dis~last.quarter.viol+last.year.viol+last.three.years.viol,
data=die.or.dis))
qqnorm(log(training.nonzero$num.days.lost))
y <- rnorm(1000, mean = 3.3, sd = 1.78)
qqnorm(log(training.nonzero$num.days.lost), y)
qqnorm(x = log(training.nonzero$num.days.lost), y)
y <- rchisq(500, df = 3)
## Q-Q plot for Chi^2 data against true theoretical distribution:
qqplot(qchisq(ppoints(500), df = 3), y,
main = expression("Q-Q plot for" ~~ {chi^2}[nu == 3]))
qqline(y, distribution = function(p) qchisq(p, df = 3),
prob = c(0.1, 0.6), col = 2)
mtext("qqline(*, dist = qchisq(., df=3), prob = c(0.1, 0.6))")
y <- rchisq(500, df = 3)
## Q-Q plot for Chi^2 data against true theoretical distribution:
qqplot(qchisq(ppoints(500), df = 3), y,
main = expression("Q-Q plot for" ~~ {chi^2}[nu == 3]))
qqline(y, distribution = function(p) qchisq(p, df = 3),
prob = c(0.1, 0.6), col = 2)
qqplot(qchisq(ppoints(500), df = 3), y)
qqline(y, distribution = function(p) qchisq(p, df = 3),
prob = c(0.1, 0.6), col = 2)
qqplot(qchisq(ppoints(500), df = 3), y)
qqline(y, distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78),
prob = c(0.1, 0.6), col = 2)
qqplot(y)
qqline(y, distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78),
prob = c(0.1, 0.6), col = 2)
qqline(y, distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78),
prob = c(0.1, 0.6), col = 2)
y <- rchisq(500, df = 3)
## Q-Q plot for Chi^2 data against true theoretical distribution:
# qqplot(qchisq(ppoints(500), df = 3), y)
qqline(y, distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78),
prob = c(0.1, 0.6), col = 2)
qqnorm(log(training.nonzero$num.days.lost),
distri)
qqnorm(log(training.nonzero$num.days.lost),
distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78))
qqline(log(training.nonzero$num.days.lost),
distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78))
qqplot(log(training.nonzero$num.days.lost),
distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78))
qqnorm(log(training.nonzero$num.days.lost))
qqline(distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78))
qqline(log(training.nonzero$num.days.lost), distribution = function(p) qnorm(p, mean = 3.3, sd = 1.78))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(training.nonzero$num.days.lost))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(training.nonzero$num.days.lost)))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf((training.nonzero$num.days.lost)))
qqnorm(log(training.nonzero$num.days.lost))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(training.nonzero$num.days.lost)))
hist(log(training.nonzero$num.days.lost))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(training.nonzero$num.days.lost)))
hist(log(training.nonzero$num.days.lost), 50)
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(training.nonzero$num.days.lost)))
hist(log(training.nonzero$num.days.lost), 100)
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(training.nonzero$num.days.lost)))
hist(log(training.nonzero$num.days.lost), 10)
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(training.nonzero$num.days.lost)))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
plot(ecdf(log(
as.numeric(complete.active.quarters %>% filter(num.days.lost >0 & active) %>% select(num.days.lost))
)))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
plot(ecdf(log(
complete.active.quarters %>% filter(num.days.lost >0 & active) %>% select(num.days.lost))
))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(non.zero$num.days.lost))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(non.zero$num.days.lost)))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf((non.zero$num.days.lost)))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
plot(ecdf(log(non.zero$num.days.lost)))
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
mu <- mean(non.zero$num.days.lost)
sig <- sd(non.zero$num.days.lost)
mu <- mean(log(non.zero$num.days.lost))
sig <- sd(log(non.zero$num.days.lost))
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
x <- log(rnorm(length(y), mean = mu, sd = sig))
qqnorm(y = y, x = x)
qqnorm(y)
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y)
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y)
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y)
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
# plot(ecdf(log(non.zero$num.days.lost)))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
qqplot(y)
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y)
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
# plot(ecdf(log(non.zero$num.days.lost)))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y,
xlab = "log(num.days.lost)")
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y,
xlab = "log(num.days.lost)", ylab = "quantile")
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
"3" + "4"
paste("3", "4", "5")
string(3)
String(3)
as.String(3)
as.string(3)
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y,
xlab = "log(num.days.lost)", ylab = "quantile")
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
# require(fitdistrplus)
# if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
# if(!exists("f")){
#   training.nonzero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
#   f <- fitdist(log(training.nonzero$num.days.lost), "norm")
# }
# par("mar")
# par(mar=c(1,1,1,1))
# plotdist(log(training.nonzero$num.days.lost),"norm",para=list(mean=f$estimate[1], sd=f$estimate[2]))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
non.zero <- complete.active.quarters %>% filter(num.days.lost >0 & active)
y <- log(non.zero$num.days.lost)
mu <- mean(y)
sig <- sd(y)
qqplot(qnorm(ppoints(500), mean = mu, sd = sig), y,
xlab = "log(num.days.lost)", ylab = "quantile", main = "Normal Q-Q Plot")
qqline(y, distribution = function(p) qnorm(p, mean = mu, sd = sig))
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 4601437 & year < 2003) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 101401 & year < 2004) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 503528 & year < 2013) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active and year >= 2005) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active & year >= 2005) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active & year >= 2005)
%>% select(mine.name, mine_id, year, quarter, num.death)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active & year >= 2005) %>%
select(mine.name, mine_id, year, quarter, num.death) %>%
arrange(desc(num.death))
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 101401 & year < 2004) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 503528 & year < 2013) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
detach("package:MASS", unload=TRUE)
detach("package:fitdistrplus", unload=TRUE)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:MASS", unload=TRUE)
library(dplyr)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
head(top.deaths, 10)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
top.deaths <- complete.active.quarters %>% filter(active & year >= 2005) %>% arrange(desc(num.death)) %>% select(mine.name, mine_id, year, quarter, num.death)
head(top.deaths, 10)
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 1510212 & year < 2005) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 1517165 & year < 2005) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
library(ggplot2)
if(!exists("complete.active.quarters")){load("./San Antonio/output/result.RData")}
yearly.viol <- complete.active.quarters %>%
filter(mine_id == 1519344 & year < 2011) %>%
group_by(year) %>%
summarise(count = sum(viol.quantity))
qplot(x = year, y = count, data = yearly.viol, geom = c("point", "line"),
main = "Number of Yearly Violations",
xlab = "Year", ylab = "count")
